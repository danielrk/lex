ESTIMATE of time to complete assignment: 20 hours
      
      Start  Time
Date  Time   Spent  Work completed
----  -----  ----   --------------
10/4  22:00  2:00	History mechanism as linked list
10/5   0:00  2:00   hClear, hRemember
10/5   9:30  1:45   hDump
10/5  16:30  2:00   hExpand sketched out, partially implemented
10/5  19:00  2:00   hExpand auxiliary functions for sub events
10/5  21:00  2:30   hExpand cont'd
10/5  23:30  1:00   Substitutions (w/o token designators)
10/6   0:30  1:00   Recursive implementation of hExpand
10/6  14:30  1:00   More hExpand 
10/6  15:30  1:00   Finished history.c
10/6  16:30  2:00   Started recursive lex.c
10/6  18:30  0:45   Finished lex.c
10/6  19:15  1:30   Makefile, modified includes
10/7   1:00  2:00   :M memory bug
10/7  10:00  1:00   fixed seg fault
10/7  11:00  1:00   fixed infinite loop for [..]![..]
                    memleak in lex.c
10/7  12:00  0:40   fixed warnings w/ const char*
                    passed all public tests
                    style edits
             ----
             24:30       TOTAL time spent

Just getting the program to compile was the
most conceptually foreign challenge to me. I
only had a vague notion of compilation + linking
and didn't understand that a source file could
be compiled with only declarations of functions
included with a header, and that the compiler
looks for definitions when it links the compilation
units. Additionally, since mainLex.c and history.h
were already written and I never used const char*, 
I was forced to understand that any function using
a const char* must also promise not to modify the
string. Finally, I had to understand echo -e and
the difference between double and single quotes in
UNIX to debug my program. All in all, an edifying
assignment.
